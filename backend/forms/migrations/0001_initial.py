# Generated by Django 5.2.6 on 2025-09-30 08:57

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FormSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_by', models.CharField(blank=True, max_length=200)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('form_data', models.JSONField(default=dict, help_text='All form submission data')),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='FormFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=100)),
                ('file', models.FileField(upload_to='form_uploads/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png', 'txt'])])),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField()),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='forms.formsubmission')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='FormTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('configuration', models.JSONField(default=dict, help_text='Form configuration including fields, validation rules, etc.')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_forms', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='formsubmission',
            name='form_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='forms.formtemplate'),
        ),
        migrations.CreateModel(
            name='FormField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=100)),
                ('field_type', models.CharField(choices=[('text', 'Text Input'), ('email', 'Email'), ('number', 'Number'), ('date', 'Date'), ('datetime', 'DateTime'), ('dropdown', 'Dropdown'), ('checkbox', 'Checkbox'), ('radio', 'Radio Button'), ('textarea', 'Text Area'), ('file', 'File Upload'), ('phone', 'Phone Number')], max_length=20)),
                ('label', models.CharField(max_length=200)),
                ('placeholder', models.CharField(blank=True, max_length=200)),
                ('help_text', models.TextField(blank=True)),
                ('is_required', models.BooleanField(default=False)),
                ('is_visible', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('configuration', models.JSONField(default=dict, help_text='Field-specific configuration like options, validation rules')),
                ('conditional_logic', models.JSONField(blank=True, default=dict, help_text='Rules for when this field should be visible')),
                ('form_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='forms.formtemplate')),
            ],
            options={
                'ordering': ['order', 'id'],
                'unique_together': {('form_template', 'field_name')},
            },
        ),
        migrations.CreateModel(
            name='FormValidationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_type', models.CharField(choices=[('min_length', 'Minimum Length'), ('max_length', 'Maximum Length'), ('min_value', 'Minimum Value'), ('max_value', 'Maximum Value'), ('pattern', 'Regex Pattern'), ('custom', 'Custom Logic')], max_length=50)),
                ('rule_value', models.TextField(help_text='The value or pattern for this validation rule')),
                ('error_message', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='validation_rules', to='forms.formfield')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(default='email', max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('retrying', 'Retrying')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='forms.formsubmission')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
